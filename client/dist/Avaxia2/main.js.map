{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/avaxipedia/avaxipedia.component.ts","./src/app/avaxipedia/avaxipedia.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/post-comment/post-comment.component.ts","./src/app/post-comment/post-comment.component.html","./src/app/post-issue/post-issue.component.ts","./src/app/post-issue/post-issue.component.html","./src/app/services/api.service.ts","./src/app/settingspage/settingspage.component.ts","./src/app/settingspage/settingspage.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { SettingspageComponent } from './settingspage/settingspage.component';\nimport { AvaxipediaComponent } from './avaxipedia/avaxipedia.component';\nimport { PostIssueComponent } from './post-issue/post-issue.component';\n\nconst routes: Routes = [\n  { path: '', component: HomepageComponent},\n  { path: 'Settings', component: SettingspageComponent},\n  { path: 'Avaxipedia', component: AvaxipediaComponent},\n  { path: 'PostIssue', component: PostIssueComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Avaxia';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { SettingspageComponent } from './settingspage/settingspage.component';\nimport { AvaxipediaComponent } from './avaxipedia/avaxipedia.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostIssueComponent } from './post-issue/post-issue.component';\nimport { PostCommentComponent } from './post-comment/post-comment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    NavbarComponent,\n    HomepageComponent,\n    SettingspageComponent,\n    AvaxipediaComponent,\n    PostIssueComponent,\n    PostCommentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from './../services/api.service';\nimport { Router } from '@angular/router';\nimport { Problem } from '../entities/problem';\nimport { Comment } from '../entities/comment';\n\n\n\n@Component({\n  selector: 'app-avaxipedia',\n  templateUrl: './avaxipedia.component.html',\n  styleUrls: ['./avaxipedia.component.scss']\n})\nexport class AvaxipediaComponent implements OnInit {\n\n\n\n  url = 'http://localhost:8000';\n  problems: Problem[]; // Problems that should appear for the user after typing their names or codes\n  problemIDs: number[];\n  comments: Comment[];\n\n\n  constructor( public api: ApiService, public router: Router ) { }\n\n  ngOnInit() {}\n\n  EmptyProblems() {\n    this.problems = []; // Empty previous problems while looking for another one\n    this.problemIDs = [];\n  }\n\n  EmptyComments() {\n    this.comments = [];\n  }\n\n  StoreProblem(problem: Problem) {\n    this.problems.push(problem);\n    this.problemIDs.push(problem.ID);\n  }\n\n  GetProblemByID(event) {\n    if (event !== '') {\n      this.EmptyProblems();\n      this.EmptyComments();\n      return this.api.getProblemByID(event).subscribe((data => {\n        data.forEach( problem => {\n          this.StoreProblem(problem);\n          this.GetCommentsOfProblem(this.problemIDs);\n        });\n      }));\n    }\n  }\n\n  GetProblemByName(event) {\n    if (event.includes(' ')) {\n      this.EmptyProblems();\n      this.EmptyComments();\n      return this.api.getProblemByName(event).subscribe((data => {\n        data.forEach( problem => {\n          this.StoreProblem(problem);\n          console.log('Problem with ID :' + problem.ID + ' is stored');\n        });\n        this.GetCommentsOfProblem(this.problemIDs);\n      }));\n    }\n  }\n\n  StoreComment(comment) {\n    this.comments.push(comment);\n  }\n\n  GetCommentsOfProblem(problemIDs: number[]) {\n    return this.api.getComments(problemIDs).subscribe((data => {\n      data.forEach( cmt => {\n        this.StoreComment(cmt);\n      });\n    }));\n  }\n\n\n\n  }\n\n\n\n\n","<div class=\"page\">\n  <div class=\"row\">\n    <div class=\"title\">\n      <div class=\"sub-title\">Avaxia Knowledge base</div>\n      <h3>Avaxipedia</h3>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-3\" style=\"display:inline\">\n      <input id=\"problem-search\" #code (keyup)=\"GetProblemByID(code.value)\" class=\"form-control\" type=\"text\" placeholder=\"Problem Code\" aria-label=\"Search\">\n    </div>\n\n    <div class=\"col-3\"></div>\n    <div class=\"col-3\" style=\"display:inline\">\n      <input id=\"problem-search\" #space (keyup)=\"GetProblemByName(space.value)\" class=\"form-control\" type=\"text\" placeholder=\"Problem Name\" aria-label=\"Search\">\n    </div>\n  </div>\n\n  <div class=\"row container\">\n\n\n    <div id=\"Avaxipedia-box\" class=\"overflow-auto p-3 mb-3 mb-md-0 mr-md-3 \">\n      <div class=\"problem\" *ngFor=\"let problem of problems\">\n        <div class=\"problem-box\">\n          <div class=\"row\">\n            <div class=\"mini-avatar-container col-1\">\n              <img class=\"mini-avatar\" src=\"../../assets/avatars/1000.jpg\">\n            </div>\n            <div class=\"col-3 problem-id \">\n              <ul>\n                <li>\n                  <div class=\"problem-title\">\n                    {{ problem.Name }}\n                  </div>\n                </li>\n                <li>\n                  <div class=\"sub-title problem-code \">\n                    #{{problem.ID}}000\n                  </div>\n                </li>\n                <li>\n                  <div class=\"sub-title problem-date \">\n                    Poste On : {{ problem.PostTime }}\n                  </div>\n                </li>\n\n              </ul>\n            </div>\n            <div class=\"col-6 problem-description overflow-auto\">\n              {{ problem.Description }}\n            </div>\n            <div class=\"col-2 btn-group-vertical problem-actions\">\n              <button class=\"btn btn-info\">\n                <i class=\"fas fa-list-ul\"></i>\n              </button>\n              <button class=\"btn btn-info\"><i class=\"far fa-comments\"></i></button>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"all-comments\">\n          <div class=\"commentsss\" *ngFor=\"let comment of comments\">\n            <div class=\"problem-comments row\" *ngIf=\"comment.Problem_ID === problem.ID\" >\n              <div class=\"mini-avatar-container col-1\">\n                <img class=\"mini-avatar-comment\" src=\"../../assets/avatars/1002.jpg\">\n              </div>\n              <div class=\"col-3 comment-id \">\n                <div class=\"comment-owner\">\n                  {{ comment.Prename}} {{ comment.Name }}\n                </div>\n                <div class=\"comment-date\">\n                  {{ (comment.PostTime) }}\n                </div>\n              </div>\n              <div class=\"col-7 comment-content\">\n                {{ comment.Content }}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n\n      </div>\n\n\n\n\n\n\n    </div>\n  </div>\n</div>\n\n<br><br>\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit, AfterViewInit {\n\n\n  constructor() {\n    // document.getElementsByTagName('div')[0].style.marginLeft = '250';\n\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {}\n\n\n\n\n\n}\n","<div class=\"page\">\n    <div class=\"row\">\n      <div class=\"title\">\n        <div class=\"sub-title\">Welcome to Avaxipedia !</div>\n        <h3>Home</h3>\n      </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light shadow-lg\">\n  <img src=\"../../assets/logo.png\">\n  <img class=\"partner-logo\" src=\"../../assets/1280px-Coca-Cola_logo.svg.png\">\n\n  </nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-comment',\n  templateUrl: './post-comment.component.html',\n  styleUrls: ['./post-comment.component.scss']\n})\nexport class PostCommentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>post-comment works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-issue',\n  templateUrl: './post-issue.component.html',\n  styleUrls: ['./post-issue.component.scss']\n})\nexport class PostIssueComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n    <div class=\"row\">\n      <div class=\"title\">\n        <div class=\"sub-title\">Your Issue is not in our knowledge database ?</div>\n        <h3>Post your new Issue Here</h3>\n      </div>\n    </div>\n    <div class=\"row\">\n      <form>\n\n      </form>\n\n\n    </div>\n\n\n  </div>\n\n  <br><br>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Problem } from '../entities/problem';\nimport { Comment } from '../entities/comment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  serverURL = 'http://localhost:8000/';\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n    })\n  };\n\n  getAllProblems(): Observable<Problem[]> {\n    return this.http.get<Problem[]>(this.serverURL + 'problems', this.httpOptions );\n  }\n\n  getProblemByID(ID: number): Observable<Problem[]> {\n    return this.http.get<Problem[]>(this.serverURL + 'problem/' + ID, this.httpOptions);\n  }\n\n  getProblemByName(name: string): Observable<Problem[]> {\n    return this.http.get<Problem[]>(this.serverURL + 'problem/name/' + name, this.httpOptions);\n  }\n\n  getComments(problemIDs: number[]): Observable<Comment[]> {\n    return this.http.get<Comment[]>(this.serverURL + 'comments?array=[' + problemIDs + ']', this.httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settingspage',\n  templateUrl: './settingspage.component.html',\n  styleUrls: ['./settingspage.component.scss']\n})\nexport class SettingspageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"page\">\n    <div class=\"row\">\n      <div class=\"title\">\n        <div class=\"sub-title\">Change your photo and update your name here</div>\n        <h3>Settings</h3>\n      </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"wrapper\">\n  <!-- Sidebar -->\n  <nav id=\"sidebar\">\n    <nav class=\"navbar navbar-expand-lg navbar-light shadow-lg\">\n\n    </nav>\n    <div class=\"avatar-container\">\n      <img class=\"avatar\" src=\"../../assets/avatars/1000.jpg\">\n    </div>\n    <div id=\"sidebar-buttons\">\n      <ul class=\"nav flex-column\">\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"\">\n            <i class=\"fas fa-home\"></i>\n            Home\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"Avaxipedia\">\n            <i class=\"fas fa-search\"></i>\n            Avaxipedia\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"PostIssue\">\n            <i class=\"fas fa-question-circle\"></i>\n            Post New Issue\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"Settings\">\n            <i class=\"fas fa-users-cog\"></i>\n            <a class=\"nav-lin-name\">Settings</a>\n          </a>\n        </li>\n\n\n      </ul>\n\n    </div>\n\n  </nav>\n\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}